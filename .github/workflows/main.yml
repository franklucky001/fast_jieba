name: Release Python Whl

on: 
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
    runs-on: ${{ matrix.platform }}

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set Env
        run: | 
            echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: Setup Rust environment
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            override: true
      - name: Setup Python environment
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: cargo-build
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
      - name: py-deps
        run: |
          pip install --upgrade pip
          pip install cffi maturin wheel .
      - name: py-install
        run: |
          maturin build --release
      - uses: actions/upload-artifact@v2
        name: python-wheels
        with:
          name: wheel-${{ matrix.platform }}
          path: target/wheels/

  release:
    strategy:
      matrix:
        platform: [ ubuntu-latest, macOS-latest, windows-latest ]
        python-version: ['3.8', '3.9', '3.10']
    name: Release Python Whl
    runs-on: ${{ matrix.platform }}
    needs:
      - build
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set Env
        run: | 
            echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: download wheel
        uses: actions/download-artifact@v2
        with:
          name: wheel-${{ matrix.platform }}
          path: target/wheels/
      - name: setup python environment
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: py-deps
        run: |
          pip install --upgrade pip
          pip install cffi maturin wheel .
      - name: Publish to Pypi
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.MATURIN_PYPI_TOKEN }}
        run: |
          maturin publish --skip-existing
